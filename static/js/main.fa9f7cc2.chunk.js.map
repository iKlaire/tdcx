{"version":3,"sources":["config/env.js","utils/auth.js","apis/apiHelper.js","apis/auth.js","utils/logging.js","utils/errorAndPerfLogging.js","contexts/AppContext/AppContext.js","utils/routes.js","components/ProtectedRoute/ProtectedRoute.js","components/TextButton/TextButton.styles.js","components/TextButton/TextButton.js","layouts/StandardLayout/components/Header/Header.styles.js","layouts/StandardLayout/components/Header/Header.js","layouts/StandardLayout/StandardLayout.styles.js","layouts/StandardLayout/StandardLayout.js","layouts/ExternalLayout/ExternalLayout.styles.js","layouts/ExternalLayout/ExternalLayout.js","components/RequiredAsterisk/RequiredAsterisk.styles.js","components/RequiredAsterisk/RequiredAsterisk.js","components/FormLabel/FormLabel.styles.js","components/FormLabel/FormLabel.js","components/FormItem/FormItem.styles.js","components/FormItem/FormItem.js","components/FormInput/FormInput.js","components/Title/Title.styles.js","components/Title/Title.js","pages/Login/Login.styles.js","pages/Login/Login.js","hooks/reactQuery.js","apis/task.js","components/Card/Card.styles.js","components/Card/Card.js","pages/Dashboard/components/TaskModal/TaskModal.styles.js","pages/Dashboard/components/TaskModal/TaskModal.js","pages/Dashboard/components/TaskListSection/TaskListSection.styles.js","pages/Dashboard/components/TaskListSection/TaskListSection.js","pages/Dashboard/components/PieChart/PieChart.js","pages/Dashboard/Dashboard.styles.js","pages/Dashboard/Dashboard.js","apis/dashboard.js","reportWebVitals.js","index.js"],"names":["module","exports","REACT_APP_API_ENDPOINT","process","REACT_APP_SENTRY_DSN","REACT_APP_DEPLOY_ENV","IS_DEV","PORT","getAuthObj","authFromLocalStorage","window","localStorage","getItem","JSON","parse","getIsUserLoggedIn","authObj","Object","keys","length","getAuthToken","token","getAuthHeader","Authorization","updateApiHeaders","api","defaults","headers","axios","create","baseURL","env","apiErrorHandler","e","response","data","code","message","Error","interceptors","request","use","req","params","fields","_fields","entries","forEach","key","value","Array","isArray","valueInString","join","mutateParamsArrayToString","res","logLevels","TRACE","label","DEBUG","INFO","WARNING","ERROR","FATAL","processLog","stringify","preProcessLog","logLevelKey","timestamp","Date","toISOString","preText","String","substring","toUpperCase","log","shouldProcessMessage","messageToDisplay","i","push","console","error","stack","warn","logInfo","messages","hasInit","shouldTrack","init","withPerf","defaultConfig","environment","dsn","ignoreErrors","extraConfig","tracesSampleRate","integrations","Integrations","BrowserTracing","Sentry","addUserContext","id","username","AppContext","createContext","AppContextProvider","children","history","useHistory","theme","originalTheme","useMemo","color","primary","secondary","tertiary","grey","lightGrey","green","red","white","borderColor","baseBgColor","textColor","fontWeight","light","regular","bold","bolder","spacing","xxs","xs","s","md","lg","xl","xxl","xxxl","useState","useTheme","user","setUser","setToken","isLoadingUser","setIsLoadingUser","isLoggedIn","name","onLogout","useCallback","removeItem","scope","mountUserData","a","storedToken","storedUser","addErrAndPerfUserContext","useEffect","Provider","onLogin","apiKey","post","postLogin","then","userAuthObj","userData","image","setItem","catch","ex","isUserLoading","AppContextConsumer","Consumer","withAppContext","Component","props","appContextProps","component","path","otherRouteProps","loading","to","BUTTON_COLOR","danger","highlight","success","default","StyledButton","styled","TextButton","disabled","icon","onClick","text","htmlType","type","HeaderRow","justify","src","size","style","marginRight","border","Header","ContentLayout","ContentHeader","ContentBody","div","RootContainer","ExternalLayout","align","Container","span","RequiredAsterisk","Root","p","FormLabel","hasRequiredErrorMessage","defaultProps","StyledFormItem","Item","FormItem","requiredErrorMessage","extraRules","noStyle","defaultValue","rules","required","addRules","colon","initialValue","FormInput","extraProps","placeholder","StyledTitle","marginBottom","Title","LoginContainer","useForm","form","isLoading","setIsLoading","handleOnLogin","values","finally","onFinish","width","height","useDisplayError","shouldDisplayError","prefixErrorMessage","isErrorDisplayed","setIsErrorDisplayed","baseErrorMessage","errorMessage","useCustomQuery","paramsInArray","apiFunction","defaultEmptyValue","undefined","throttleRefetchTimeInMs","postProcessFunc","apiResData","queryOptions","keysInQuery","wrappedApiFunc","useQuery","isFetching","refetch","returnedParams","returnedData","updateTask","payload","put","useRefetchTasks","queryClient","useQueryClient","extraKeys","invalidateQueries","useRefetchQuery","StyledCard","Card","title","bodyStyle","SubmitButton","TaskModal","visible","onClose","onSubmitted","isNew","setFieldsValue","footer","onCancel","destroyOnClose","initialValues","createTask","_id","preserve","AddTaskButton","ItemTitleText","isCompleted","ListItemMeta","Meta","SearchInput","confirm","getListItemActions","item","openTaskModal","onUpdated","EditAction","EditOutlined","DeleteAction","DeleteOutlined","content","onOk","delete","TaskList","onAddNewTaskButtonClick","searchKey","setSearchKey","isTaskModalVisible","setTaskModalVisible","selectedTask","setSelectedTask","closeTaskModal","useTaskModal","getTasks","get","tasks","useGetTasks","isTasksLoading","filteredTaskList","filter","task","toLowerCase","includes","gutter","prefix","SearchOutlined","onChange","evt","target","itemLayout","dataSource","renderItem","actions","avatar","active","defaultChecked","completed","isChecked","checked","PieChart","tasksCompleted","totalTasks","config","angleField","colorField","legend","interactions","DashboardContainer","CompletedTaskText","TotalTaskText","List","ul","ListItem","li","getDashboardData","useGetDashboardData","dashboardData","refetchDashboardData","refetchTasks","latestTasks","map","paddingLeft","paddingRight","TaskListSection","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","QueryClient","defaultOptions","queries","retry","refetchOnWindowFocus","staleTime","initErrAndPerf","loginUri","dashboardUri","pathsInStandardLayout","pathsInExternalLayout","InternalAppSwitch","exact","Dashboard","ExternalAppSwitch","Login","Main","from","ReactDOM","render","StrictMode","fallback","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.fa9f7cc2.chunk.js","sourcesContent":["module.exports = {\n  REACT_APP_API_ENDPOINT: process.env.REACT_APP_API_ENDPOINT || 'https://dev-dl.tdcx.com:3092',\n  REACT_APP_SENTRY_DSN: 'https://61a165446204426aabbebbaebc0cad9e@o1054797.ingest.sentry.io/6040441',\n  REACT_APP_DEPLOY_ENV: process.env.REACT_APP_DEPLOY_ENV || 'dev',\n\n  IS_DEV: !process.env.REACT_APP_DEPLOY_ENV || process.env.REACT_APP_DEPLOY_ENV === 'dev',\n  PORT: process.env.PORT || '5001'\n};\n","const getAuthObj = () => {\n  const authFromLocalStorage = window.localStorage.getItem('auth');\n  if (authFromLocalStorage) {\n    return JSON.parse(authFromLocalStorage);\n  }\n  return {};\n};\n\nexport const getIsUserLoggedIn = () => {\n  const authObj = getAuthObj();\n  return Object.keys(authObj).length > 0;\n};\n\nexport const getUser = () => {\n  const authObj = getAuthObj();\n  return authObj.user || {};\n};\n\nexport const getAuthToken = () => {\n  const authObj = getAuthObj();\n  return authObj.token || '';\n};\n\nexport const setUserAuthObj = userAuthObj => {\n  window.localStorage.setItem('auth', JSON.stringify(userAuthObj));\n};\n\nexport const deleteUserAuthObj = () => {\n  window.localStorage.removeItem('auth');\n};\n","import axios from 'axios';\nimport env from 'config/env';\nimport { getIsUserLoggedIn, getAuthToken } from 'utils/auth';\n\nconst FIELDS_SEPERATOR = ',';\nconst AXIOS_GENERIC_NETWORK_ERROR_MSG = 'Network Error';\n\nexport const getAuthHeader = () => {\n  if (getIsUserLoggedIn()) {\n    return {\n      Authorization: getAuthToken()\n    };\n  }\n  return {};\n};\n\nexport const updateApiHeaders = () => {\n  api.defaults.headers = {\n    'Content-Type': 'application/json',\n    ...getAuthHeader()\n  };\n};\n\nconst api = axios.create({\n  baseURL: env.REACT_APP_API_ENDPOINT,\n  headers: {\n    'Content-Type': 'application/json',\n    ...getAuthHeader()\n  }\n});\n\n// TODO: Might need apiErrorHandlerWithRedirect but since we have react-query we might do that there\nconst apiErrorHandler = e => {\n  if (e.response && e.response.data) {\n    if (e.response.data.code) {\n      throw e.response.data;\n    } else if (e.response.data.message) {\n      throw new Error(e.response.data.message);\n    } else {\n      throw new Error(e.response.data);\n    }\n  } else if (e.message) {\n    if (e.message === AXIOS_GENERIC_NETWORK_ERROR_MSG) {\n      e.message = `${e.message}. Please check your internet connection.`;\n    }\n    throw e;\n  } else {\n    throw new Error('Unexpected error occured when calling api. Please contact admin.');\n  }\n};\n\nconst constructAndMutateOptions = params => {\n  // fields\n  if (!!params && !!params.fields) {\n    params._fields = params.fields;\n    delete params.fields;\n  }\n};\n\nconst mutateParamsArrayToString = params => {\n  if (!!params) {\n    Object.entries(params).forEach(([key, value]) => {\n      if (Array.isArray(value)) {\n        const valueInString = value.join(FIELDS_SEPERATOR);\n        params[key] = valueInString;\n      }\n    });\n  }\n};\n\napi.interceptors.request.use(req => {\n  constructAndMutateOptions(req.params);\n  mutateParamsArrayToString(req.params);\n  return req;\n});\napi.interceptors.response.use(res => res.data, apiErrorHandler);\n\nexport default api;\n\nexport const nonAuthApi = axios.create({\n  baseURL: env.REACT_APP_API_ENDPOINT,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\nnonAuthApi.interceptors.response.use(res => res.data, apiErrorHandler);\n","import api from './apiHelper';\n\nexport const postLogin = (apiKey, name) => api.post('/login', { apiKey, name });\n","/* eslint-disable no-console */\nconst logLevels = {\n  TRACE: {\n    code: 0,\n    key: 'TRACE',\n    label: 'Trace'\n  },\n  DEBUG: {\n    code: 1,\n    key: 'DEBUG',\n    label: 'Debug'\n  },\n  INFO: {\n    code: 2,\n    key: 'INFO',\n    label: 'Info'\n  },\n  WARNING: {\n    code: 3,\n    key: 'WARNING',\n    label: 'Warning'\n  },\n  ERROR: {\n    code: 4,\n    key: 'ERROR',\n    label: 'Error'\n  },\n  FATAL: {\n    code: 5,\n    key: 'FATAL',\n    label: 'Fatal'\n  }\n};\n\nconst processLog = message => {\n  let messageToDisplay = '';\n\n  if (message instanceof Error) {\n    messageToDisplay = message.message;\n  } else {\n    messageToDisplay = JSON.stringify(message);\n  }\n\n  return messageToDisplay;\n};\n\nconst preProcessLog = logLevelKey => {\n  const timestamp = `[${new Date().toISOString()}]`;\n  const preText = String(logLevels[logLevelKey].label || '')\n    .substring(0, 4)\n    .toUpperCase();\n\n  return `${timestamp} ${preText}: `;\n};\n\nconst log = (logLevelKey = logLevels.INFO.key, shouldProcessMessage = false, ...messages) => {\n  let messageToDisplay = [preProcessLog(logLevelKey)];\n\n  for (let i = 0; i < messages.length; i++) {\n    const message = messages[i];\n    messageToDisplay.push(shouldProcessMessage ? processLog(message) : message);\n\n    if (message instanceof Error) {\n      // For stack trace\n      console.error(`${message.stack}`);\n    }\n  }\n\n  if (logLevels[logLevelKey].code >= logLevels.WARNING.code) {\n    console.warn(...messageToDisplay);\n  } else {\n    console.log(...messageToDisplay);\n  }\n};\n\nexport const logTrace = (...messages) => log(logLevels.TRACE.key, true, ...messages);\nexport const logDebug = (...messages) => log(logLevels.DEBUG.key, true, ...messages);\nexport const logInfo = (...messages) => log(logLevels.INFO.key, true, ...messages);\nexport const logWarning = (...messages) => log(logLevels.WARNING.key, true, ...messages);\nexport const logError = (...messages) => log(logLevels.ERROR.key, true, ...messages);\nexport const logFatal = (...messages) => log(logLevels.FATAL.key, true, ...messages);\n\nexport const logTracePure = (...messages) => log(logLevels.TRACE.key, false, ...messages);\nexport const logDebugPure = (...messages) => log(logLevels.DEBUG.key, false, ...messages);\nexport const logInfoPure = (...messages) => log(logLevels.INFO.key, false, ...messages);\nexport const logWarningPure = (...messages) => log(logLevels.WARNING.key, false, ...messages);\nexport const logErrorPure = (...messages) => log(logLevels.ERROR.key, false, ...messages);\nexport const logFatalPure = (...messages) => log(logLevels.FATAL.key, false, ...messages);\n","import * as Sentry from '@sentry/react';\nimport { Integrations } from '@sentry/tracing';\n\nimport { REACT_APP_SENTRY_DSN, REACT_APP_DEPLOY_ENV } from 'config/env';\n\nimport { logInfo } from './logging';\n\nlet hasInit = false;\nconst shouldTrack = !!REACT_APP_SENTRY_DSN;\n\nexport const init = (withPerf = true) => {\n  if (hasInit) {\n    logInfo('Sentry has been init');\n    return;\n  }\n  if (!shouldTrack) {\n    return;\n  }\n\n  const defaultConfig = {\n    environment: REACT_APP_DEPLOY_ENV,\n    dsn: REACT_APP_SENTRY_DSN,\n    ignoreErrors: ['ResizeObserver loop limit exceeded']\n  };\n  const extraConfig = {};\n  if (withPerf) {\n    extraConfig.tracesSampleRate = 1.0;\n    extraConfig.integrations = [new Integrations.BrowserTracing()];\n  }\n\n  Sentry.init({\n    ...defaultConfig,\n    ...extraConfig\n  });\n\n  hasInit = true;\n};\n\nexport const addUserContext = ({ id, username }) => {\n  if (!hasInit) {\n    logInfo('Sentry has not been initialize,');\n    init();\n  }\n  if (!shouldTrack) {\n    return;\n  }\n\n  Sentry.setUser({ id, username });\n};\n\nexport const removeUserContext = () => {\n  if (!hasInit) {\n    logInfo('Sentry has not been initialize,');\n    init();\n  }\n  if (!shouldTrack) {\n    return;\n  }\n\n  Sentry.configureScope(scope => scope.setUser(null));\n};\n","import { useMemo, useState, useEffect, useCallback, createContext } from 'react';\nimport { message } from 'antd';\nimport { ThemeProvider as EmotionThemeProvider } from '@emotion/react';\nimport { useHistory } from 'react-router';\n\nimport { postLogin } from 'apis/auth';\nimport { updateApiHeaders } from 'apis/apiHelper';\n\nimport { buildDashboardUri, buildLoginUri } from 'utils/routes';\nimport { getIsUserLoggedIn, getUser, getAuthToken, setUserAuthObj, deleteUserAuthObj } from 'utils/auth';\nimport { addUserContext as addErrAndPerfUserContext, removeUserContext as removeErrAndPerfUserContext } from 'utils/errorAndPerfLogging';\n\nconst AppContext = createContext();\n\nconst useTheme = () => {\n  const originalTheme = useMemo(\n    () => ({\n      color: {\n        primary: '#5285ec',\n        secondary: '#e8ecec',\n        tertiary: '#FFFFFF',\n        grey: '#797979',\n        lightGrey: '#FAFAFA',\n        green: '#52C41A',\n        red: '#F5222D',\n        white: '#FFFFFF',\n        borderColor: '#E9E9E9',\n        baseBgColor: '#F4F4F6',\n        textColor: '#527278'\n      },\n      fontWeight: {\n        light: 200,\n        regular: 400,\n        bold: 600,\n        bolder: 700\n      },\n      spacing: {\n        xxs: '4px',\n        xs: '8px',\n        s: '12px',\n        regular: '16px',\n        md: '32px',\n        lg: '40px',\n        xl: '48px',\n        xxl: '60px',\n        xxxl: '104px'\n      }\n    }),\n    []\n  );\n  const [theme] = useState(originalTheme);\n\n  return theme;\n};\n\nexport const AppContextProvider = ({ children }) => {\n  const history = useHistory();\n  const theme = useTheme();\n\n  const [user, setUser] = useState({});\n  const [token, setToken] = useState('');\n  const [isLoadingUser, setIsLoadingUser] = useState(true);\n\n  const isLoggedIn = !!user && !!user.name;\n\n  const onLogin = ({ apiKey, name }) => {\n    return postLogin(apiKey, name)\n      .then(res => {\n        const userData = {\n          token: res.token.token,\n          user: {\n            id: apiKey,\n            name: res.token.name,\n            image: res.image\n          }\n        };\n        setUserAuthObj(userData);\n        updateApiHeaders(); // update API header ASAP to ensure subsequent API call is updated\n        setUser(userData.user);\n        addErrAndPerfUserContext({ id: apiKey, username: name });\n        return userData;\n      })\n      .catch(ex => message.error(ex));\n  };\n\n  const onLogout = useCallback(() => {\n    deleteUserAuthObj();\n    setUser({});\n    updateApiHeaders();\n    history.push(buildLoginUri());\n\n    removeErrAndPerfUserContext();\n  }, [history]);\n\n  const mountUserData = useCallback(async () => {\n    if (getIsUserLoggedIn()) {\n      const storedToken = getAuthToken();\n      const storedUser = getUser();\n      setUser(storedUser);\n      setToken(storedToken);\n      history.push(buildDashboardUri());\n\n      addErrAndPerfUserContext({ id: storedUser.id, username: storedUser.name });\n    } else {\n      onLogout();\n      message.error('Your session has expired. Please log in again.');\n      history.push(buildLoginUri());\n    }\n    setIsLoadingUser(false);\n  }, [history, onLogout]);\n\n  useEffect(() => {\n    mountUserData();\n  }, [mountUserData]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        user,\n        token,\n        onLogin,\n        onLogout,\n        isLoggedIn,\n        isUserLoading: isLoadingUser\n      }}\n    >\n      <EmotionThemeProvider theme={theme}>{children}</EmotionThemeProvider>\n    </AppContext.Provider>\n  );\n};\n\nexport const AppContextConsumer = AppContext.Consumer;\n\nexport const withAppContext = Component => {\n  const AppContextComponent = props => <AppContextConsumer>{appContextProps => <Component {...appContextProps} {...props} />}</AppContextConsumer>;\n  return AppContextComponent;\n};\n","export const buildBaseUri = () => '/';\nexport const buildLoginUri = () => '/login';\nexport const buildDashboardUri = () => '/dashboard';\n","import React from 'react';\nimport { message, Skeleton } from 'antd';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { withAppContext } from 'contexts/AppContext/AppContext';\nimport { buildLoginUri } from 'utils/routes';\n\nconst loginUri = buildLoginUri();\n\nconst ProtectedRoute = ({ isLoggedIn, isUserLoading, component, path, ...otherRouteProps }) => {\n  if (isUserLoading) {\n    return <Skeleton loading={isUserLoading} />;\n  } else if (!isLoggedIn) {\n    message.error('Please login before accessing this page');\n    return <Redirect to={loginUri} />;\n  } else {\n    return <Route path={path} component={component} {...otherRouteProps} />;\n  }\n};\n\nProtectedRoute.propTypes = {\n  path: PropTypes.string.isRequired,\n  component: PropTypes.elementType.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n  isUserLoading: PropTypes.bool.isRequired\n};\n\nexport default withAppContext(ProtectedRoute);\n","import styled from '@emotion/styled';\nimport { Button } from 'antd';\n\nconst BUTTON_COLOR = {\n  danger: 'red',\n  highlight: 'secondary',\n  success: 'green',\n  default: 'textColor'\n};\n\nexport const StyledButton = styled(Button)`\n  color: ${props => props.theme && props.theme.color && props.theme.color[BUTTON_COLOR[props.color]]};\n  font-size: 16px;\n`;\n","import { StyledButton } from './TextButton.styles';\n\nconst TextButton = ({ color = 'default', disabled, icon, onClick, text, htmlType }) => {\n  return (\n    <StyledButton color={color} icon={icon} onClick={onClick} type=\"link\" disabled={disabled} htmlType={htmlType} data-testid=\"textButton\">\n      {text}\n    </StyledButton>\n  );\n};\n\nexport default TextButton;\n","import styled from '@emotion/styled';\nimport { Col, Row } from 'antd';\n\nexport const HeaderRow = styled(Row)`\n  height: 100%;\n  width: 80vw;\n  margin: 0 auto;\n`;\n\nexport const LogoutCol = styled(Col)`\n  height: 100%;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import { Avatar, Col } from 'antd';\nimport { withAppContext } from 'contexts/AppContext/AppContext';\n\nimport TextButton from 'components/TextButton/TextButton';\n\nimport { HeaderRow } from './Header.styles';\n\nconst Header = ({ onLogout, user }) => {\n  return (\n    <HeaderRow justify=\"space-between\">\n      <Col>\n        <Avatar src={user.image} size=\"large\" style={{ marginRight: 8, border: 1 }} />\n        <span>{user.name}</span>\n      </Col>\n      <Col>\n        <TextButton text=\"Logout\" onClick={onLogout} />\n      </Col>\n    </HeaderRow>\n  );\n};\n\nexport default withAppContext(Header);\n","import styled from '@emotion/styled';\nimport { Layout } from 'antd';\n\nconst { Header } = Layout;\n\nexport const ContentLayout = styled(Layout)`\n  height: 100vh;\n  background-color: ${props => props.theme.color.baseBgColor};\n  border-radius: 24px 0px 0px 24px;\n  overflow-y: auto;\n`;\n\nexport const ContentHeader = styled(Header)`\n  background-color: ${props => props.theme.color.white};\n  height: 64px;\n  color: ${props => props.theme.color.textColor};\n  font-size: 16px;\n  box-shadow: rgba(14, 30, 37, 0.12) 0px 2px 4px 0px, rgba(14, 30, 37, 0.32) 0px 2px 16px 0px;\n\n  @media (max-width: 768px) {\n    padding: 0 25px;\n  }\n`;\n\nexport const ContentBody = styled.div`\n  width: 100%;\n  justify-content: center;\n  overflow: auto;\n  padding: ${props => props.theme.spacing.regular} ${props => props.theme.spacing.md} ${props => props.theme.spacing.md}\n    ${props => props.theme.spacing.md};\n\n  @media (max-width: 768px) {\n    padding-left: 0;\n    padding-right: 0;\n  }\n`;\n","import React from 'react';\nimport { withAppContext } from 'contexts/AppContext/AppContext';\n\nimport Header from './components/Header/Header';\n\nimport { ContentLayout, ContentHeader, ContentBody } from './StandardLayout.styles';\n\nconst StandardLayout = ({ children }) => {\n  return (\n    <ContentLayout>\n      <ContentHeader>\n        <Header />\n      </ContentHeader>\n      <ContentBody>{children}</ContentBody>\n    </ContentLayout>\n  );\n};\n\nexport default withAppContext(StandardLayout);\n","import styled from '@emotion/styled';\n\nexport const RootContainer = styled.div`\n  align-items: center;\n  background-color: ${props => props.theme.color.baseBgColor};\n  display: flex;\n  justify-content: center;\n  min-height: 100vh;\n`;\n","import React from 'react';\nimport { RootContainer } from './ExternalLayout.styles';\n\nconst ExternalLayout = ({ children }) => {\n  return (\n    <RootContainer justify=\"center\" align=\"middle\">\n      {children}\n    </RootContainer>\n  );\n};\n\nexport default ExternalLayout;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.span`\n  float: left;\n  margin-right: 4px;\n  color: ${props => props.theme.color.red};\n`;\n","import React from 'react';\nimport { Container } from './RequiredAsterisk.styles';\n\nconst RequiredAsterisk = () => <Container data-testid=\"asterisk\">*</Container>;\n\nexport default RequiredAsterisk;\n","import styled from '@emotion/styled';\n\nexport const Root = styled.p`\n  font-size: 16px;\n  margin-bottom: ${props => props.theme.spacing.xs};\n`;\n","import React from 'react';\n\nimport RequiredAsterisk from 'components/RequiredAsterisk/RequiredAsterisk';\n\nimport { Root } from './FormLabel.styles';\n\nconst FormLabel = ({ children, hasRequiredErrorMessage, ...props }) => (\n  <Root {...props} data-testid=\"formlabel\">\n    {hasRequiredErrorMessage ? <RequiredAsterisk data-testid=\"asterisk\" /> : ''}\n    {children}\n  </Root>\n);\n\nFormLabel.defaultProps = {\n  hasRequiredErrorMessage: false\n};\n\nexport default FormLabel;\n","import styled from '@emotion/styled';\nimport { Form } from 'antd';\n\nexport const StyledFormItem = styled(Form.Item)`\n  width: 100%;\n  font-size: 14px;\n  margin-bottom: ${props => props.theme.spacing.s};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FormLabel from 'components/FormLabel/FormLabel';\n\nimport { StyledFormItem } from './FormItem.styles';\n\nconst addRules = (requiredErrorMessage, extraRules) => {\n  const rules = [];\n\n  if (!!requiredErrorMessage) {\n    rules.push({\n      required: true,\n      message: requiredErrorMessage\n    });\n  }\n\n  return [...rules, ...extraRules];\n};\n\nconst FormItem = ({ name, label, requiredErrorMessage, extraRules, noStyle, children, defaultValue, ...props }) => {\n  const rules = addRules(requiredErrorMessage, extraRules);\n\n  return (\n    <>\n      {!!label && (\n        <FormLabel hasRequiredErrorMessage={!!requiredErrorMessage} data-testid=\"label\">\n          {label}\n        </FormLabel>\n      )}\n      <StyledFormItem name={name} colon={false} rules={rules} initialValue={defaultValue} noStyle={noStyle} {...props} data-testid=\"formItem\">\n        {children}\n      </StyledFormItem>\n    </>\n  );\n};\n\nFormItem.propTypes = {\n  children: PropTypes.node.isRequired,\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  defaultValue: PropTypes.any,\n  extraRules: PropTypes.array,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  requiredErrorMessage: PropTypes.string\n};\n\nFormItem.defaultProps = {\n  label: '',\n  requiredErrorMessage: '',\n  extraRules: []\n};\n\nexport default FormItem;\n","import React from 'react';\nimport { Input } from 'antd';\nimport PropTypes from 'prop-types';\n\nimport FormItem from 'components/FormItem/FormItem';\n\nconst FormInput = ({ disabled, extraProps, label, name, placeholder, requiredErrorMessage, extraRules }) => {\n  return (\n    <FormItem extraRules={extraRules} name={name} label={label} requiredErrorMessage={requiredErrorMessage}>\n      <Input disabled={disabled} placeholder={placeholder} {...extraProps} />\n    </FormItem>\n  );\n};\n\nFormInput.propTypes = {\n  extraProps: PropTypes.object\n};\n\nFormInput.defaultProps = {\n  extraProps: {}\n};\n\nexport default FormInput;\n","import styled from '@emotion/styled';\n\nexport const StyledTitle = styled.div`\n  color: ${props => props.theme.color.textColor};\n  font-size: 20px;\n  margin-bottom: ${props => props.marginBottom || 0};\n\n  &:hover {\n    cursor: default;\n  }\n`;\n","import React from 'react';\n\nimport { StyledTitle } from './Title.styles.js';\n\nconst Title = ({ children, marginBottom }) => {\n  return (\n    <StyledTitle marginBottom={marginBottom} data-testid=\"title\">\n      {children}\n    </StyledTitle>\n  );\n};\n\nexport default Title;\n","import styled from '@emotion/styled';\n\nexport const LoginContainer = styled.div`\n  background-color: ${props => props.theme.color.white};\n  border-radius: 8px;\n  margin: 0 auto ${props => props.theme.spacing.s} auto;\n  padding: ${props => props.theme.spacing.md};\n  width: 300px;\n`;\n","import { useState } from 'react';\nimport { Button, Form, message } from 'antd';\nimport { useHistory } from 'react-router-dom';\n\nimport FormInput from 'components/FormInput/FormInput';\nimport { withAppContext } from 'contexts/AppContext/AppContext';\nimport { buildDashboardUri } from 'utils/routes';\n\nimport Title from 'components/Title/Title';\n\nimport { LoginContainer } from './Login.styles';\n\nconst { useForm } = Form;\n\nconst Login = ({ onLogin }) => {\n  const [form] = useForm();\n  const history = useHistory();\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleOnLogin = async values => {\n    setIsLoading(true);\n\n    return onLogin(values)\n      .then(() => {\n        message.success(`Login Success`);\n        history.push(buildDashboardUri());\n      })\n      .catch(ex => {\n        message.error(`Login failed: ${ex}`);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <LoginContainer>\n      <Form form={form} onFinish={handleOnLogin}>\n        <Title marginBottom={12}>Login</Title>\n        <FormInput name=\"apiKey\" type=\"password\" placeholder=\"Id\" requiredErrorMessage=\"Id is required to login.\" />\n        <FormInput name=\"name\" placeholder=\"Name\" requiredErrorMessage=\"Name is required to login\" />\n        <Button type=\"primary\" htmlType=\"submit\" loading={isLoading} style={{ width: '100%', height: '38px' }}>\n          Login\n        </Button>\n      </Form>\n    </LoginContainer>\n  );\n};\n\nexport default withAppContext(Login);\n","import { useCallback, useMemo, useState } from 'react';\nimport { useQuery, useQueryClient } from 'react-query';\nimport { message } from 'antd';\n\nconst useDisplayError = (shouldDisplayError, error, prefixErrorMessage) => {\n  const [isErrorDisplayed, setIsErrorDisplayed] = useState(false);\n\n  if (!isErrorDisplayed && shouldDisplayError && !!error) {\n    setIsErrorDisplayed(true);\n    console.error(error); /* eslint no-console: [\"error\", { allow: [\"error\"] }] */\n\n    const baseErrorMessage = error.message || 'Something went wrong while retriving data, please contact our technical support';\n    const errorMessage = `${prefixErrorMessage}${baseErrorMessage}`;\n    message.error(errorMessage);\n  }\n};\n\nexport const useRefetchQuery = keys => {\n  const queryClient = useQueryClient();\n  const refetch = useCallback(\n    (extraKeys = []) => {\n      queryClient.invalidateQueries([...keys, ...extraKeys]);\n    },\n    [queryClient, keys]\n  );\n\n  return { refetch };\n};\n\nexport const useCustomQuery = (\n  key,\n  paramsInArray = [],\n  apiFunction,\n  {\n    shouldDisplayError = true,\n    defaultEmptyValue = undefined,\n    prefixErrorMessage = '',\n    throttleRefetchTimeInMs = 0,\n    postProcessFunc = apiResData => apiResData,\n    ...queryOptions\n  } = {}\n) => {\n  const keysInQuery = useMemo(() => [key, ...paramsInArray], [key, paramsInArray]);\n  const wrappedApiFunc = useCallback(async () => {\n    return apiFunction(...keysInQuery).then(postProcessFunc);\n  }, [apiFunction, keysInQuery, postProcessFunc]);\n\n  const {\n    data,\n    isFetching, // isFetching is the loading state that we always expected\n    isLoading, // We deconstruct isLoading to prevent overriding our custom field when return\n    error,\n    refetch,\n    ...returnedParams\n  } = useQuery(keysInQuery, wrappedApiFunc, queryOptions);\n\n  useDisplayError(shouldDisplayError, error, prefixErrorMessage);\n  const returnedData = useMemo(() => data || defaultEmptyValue, [defaultEmptyValue, data]);\n\n  // isFetching is alaways true even when it is not fetching.\n  return { isLoading: isFetching, data: returnedData, error, refetch, ...returnedParams };\n};\n","import api from './apiHelper';\nimport { useCustomQuery, useRefetchQuery } from 'hooks/reactQuery';\n\nexport const useGetTasks = () => {\n  const getTasks = async () => {\n    return api.get(`/tasks`).then(res => res.tasks);\n  };\n\n  return useCustomQuery('tasks', [], getTasks, { defaultEmptyValue: [] });\n};\n\nexport const updateTask = (id, payload) => {\n  return api.put(`/tasks/${id}`, payload);\n};\n\nexport const createTask = payload => {\n  return api.post(`/tasks/`, payload);\n};\n\nexport const deleteTask = id => {\n  return api.delete(`/tasks/${id}`);\n};\n\nexport const useRefetchTasks = () => {\n  const { refetch } = useRefetchQuery(['tasks']);\n  return refetch;\n};\n","import styled from '@emotion/styled';\nimport { Card } from 'antd';\n\nexport const StyledCard = styled(Card)`\n  height: 100%;\n  min-height: 180px;\n\n  @media (max-width: 768px) {\n    min-height: 200px;\n    width: 100vw;\n  }\n`;\n","import { Skeleton } from 'antd';\n\nimport Title from 'components/Title/Title';\n\nimport { StyledCard } from './Card.styles';\n\nconst Card = ({ children, isLoading, title, style }) => {\n  return (\n    <StyledCard bodyStyle={style} data-testid=\"card\">\n      {isLoading ? (\n        <Skeleton data-testid=\"skeleton\" />\n      ) : (\n        <>\n          {title && <Title data-testid=\"title\">{title}</Title>}\n          {children}\n        </>\n      )}\n    </StyledCard>\n  );\n};\n\nexport default Card;\n","import styled from '@emotion/styled';\nimport { Button } from 'antd';\n\nexport const SubmitButton = styled(Button)`\n  width: 100%;\n`;\n","import React, { useEffect } from 'react';\nimport { Form, message, Modal } from 'antd';\n\nimport FormInput from 'components/FormInput/FormInput';\nimport Title from 'components/Title/Title';\n\nimport { createTask, updateTask } from 'apis/task';\n\nimport { SubmitButton } from './TaskModal.styles.js';\nimport './TaskModal.css';\n\nconst { useForm } = Form;\n\nconst TaskModal = ({ defaultValue, visible, onClose, onSubmitted }) => {\n  const [form] = useForm();\n\n  const isNew = !defaultValue;\n  const text = isNew ? '+ New Task' : 'Update Task';\n\n  useEffect(() => {\n    if (defaultValue && Object.keys(defaultValue).length > 0) {\n      form.setFieldsValue(defaultValue);\n    }\n  }, [form, defaultValue]);\n\n  const handleOnFormFinish = payload => {\n    if (isNew) {\n      createTask(payload)\n        .then(() => onSubmitted())\n        .catch(ex => message.error(ex));\n    } else {\n      updateTask(defaultValue._id, payload)\n        .then(() => onSubmitted())\n        .catch(ex => message.error(ex));\n    }\n  };\n\n  return (\n    <Modal visible={visible} footer={null} width={300} onCancel={onClose} destroyOnClose>\n      <Form form={form} initialValues={defaultValue} onFinish={handleOnFormFinish} preserve={false}>\n        <Title marginBottom=\"12px\">{text}</Title>\n        <FormInput name=\"name\" placeholder=\"Task Name\" requiredErrorMessage=\"Please enter the name of the task.\" />\n        <SubmitButton type=\"primary\" htmlType=\"submit\">\n          {text}\n        </SubmitButton>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default TaskModal;\n","import styled from '@emotion/styled';\nimport { Button, Input, List, Row } from 'antd';\n\nexport const AddTaskButton = styled(Button)`\n  width: 100%;\n  @media (max-width: 768px) {\n    width: 90%;\n  }\n`;\n\nexport const HeaderRow = styled(Row)`\nmargin\n  justify: space-between;\n  ${'' /* margin-bottom: ${props => props.theme.spacing.s}; */}\n\n  @media (max-width: 767px) {\n    text-align: center;\n  }\n`;\n\nexport const ItemTitleText = styled.span`\n  font-size: 20px;\n  color: ${props => (props.isCompleted ? props.theme.color.textColor : props.theme.color.primary)};\n  text-decoration: ${props => props.isCompleted && 'line-through'};\n  margin-bottom: 0;\n`;\n\nexport const ListItemMeta = styled(List.Item.Meta)`\n  align-items: center;\n`;\n\nexport const SearchInput = styled(Input)`\n  width: 100%;\n  @media (max-width: 768px) {\n    width: 90%;\n  }\n`;\n","import React, { useMemo, useState } from 'react';\nimport { Checkbox, Col, List, message, Modal, Row, Skeleton } from 'antd';\nimport { EditOutlined, DeleteOutlined, SearchOutlined } from '@ant-design/icons';\n\nimport { useGetTasks, updateTask, deleteTask } from 'apis/task';\n\nimport Title from 'components/Title/Title';\nimport Card from 'components/Card/Card';\nimport TaskModal from '../TaskModal/TaskModal';\n\nimport { AddTaskButton, HeaderRow, ItemTitleText, ListItemMeta, SearchInput } from './TaskListSection.styles';\n\nconst { confirm } = Modal;\n\nconst useTaskModal = () => {\n  const [isTaskModalVisible, setTaskModalVisible] = useState(false);\n  const [selectedTask, setSelectedTask] = useState({});\n\n  const openTaskModal = selectedTask => {\n    setTaskModalVisible(true);\n    setSelectedTask(selectedTask);\n  };\n\n  const closeTaskModal = () => {\n    setTaskModalVisible(false);\n    setSelectedTask({});\n  };\n\n  return { isTaskModalVisible, selectedTask, openTaskModal, closeTaskModal };\n};\n\nconst getListItemActions = (item, openTaskModal, onUpdated) => {\n  const EditAction = () => {\n    const handleOnEditButtonClick = () => {\n      openTaskModal(item);\n    };\n    return <EditOutlined onClick={handleOnEditButtonClick} />;\n  };\n\n  const DeleteAction = () => {\n    const handleOnDeleteButtonClick = () => {\n      confirm({\n        title: 'Delete task',\n        content: 'Are you sure you want to delete this task?',\n        onOk: () =>\n          deleteTask(item._id)\n            .then(() => onUpdated())\n            .catch(ex => message.error(ex))\n      });\n    };\n    return <DeleteOutlined onClick={handleOnDeleteButtonClick} />;\n  };\n\n  return [<EditAction />, <DeleteAction />];\n};\n\nconst TaskList = ({ onAddNewTaskButtonClick, onUpdated }) => {\n  const [searchKey, setSearchKey] = useState('');\n\n  const { isTaskModalVisible, selectedTask, openTaskModal, closeTaskModal } = useTaskModal();\n  const { isLoading: isTasksLoading, data: tasks } = useGetTasks();\n\n  const filteredTaskList = useMemo(() => {\n    return tasks.filter(task => task.name.toLowerCase().includes(searchKey && searchKey.toLowerCase()));\n  }, [searchKey, tasks]);\n\n  const handleOnCheckChange = id => evt => {\n    const isChecked = evt.target.checked;\n    updateTask(id, { completed: isChecked })\n      .then(() => {\n        onUpdated();\n      })\n      .catch(ex => message.error(ex));\n  };\n\n  const handleOnSearchInputChange = evt => {\n    const searchKey = evt.target.value;\n    setSearchKey(searchKey);\n  };\n\n  const handleOnTaskModalClose = () => {\n    closeTaskModal();\n  };\n\n  const handleOnUpdateTaskSubmitted = () => {\n    closeTaskModal();\n    onUpdated();\n  };\n\n  return (\n    <>\n      <HeaderRow justify=\"space-between\" align=\"center\">\n        <Col span={24} md={8} lg={12}>\n          <Title>Tasks</Title>\n        </Col>\n        <Col span={24} md={16} lg={12}>\n          <Row gutter={[16, 16]} justify=\"end\">\n            <Col span={24} md={16}>\n              <SearchInput prefix={<SearchOutlined />} placeholder=\"Search by task name\" onChange={handleOnSearchInputChange} />\n            </Col>\n            <Col span={24} md={8}>\n              <AddTaskButton type=\"primary\" onClick={onAddNewTaskButtonClick}>\n                + New Task\n              </AddTaskButton>\n            </Col>\n          </Row>\n        </Col>\n      </HeaderRow>\n      <Card>\n        <List\n          itemLayout=\"horizontal\"\n          dataSource={filteredTaskList}\n          renderItem={item => (\n            <List.Item actions={getListItemActions(item, openTaskModal, onUpdated)}>\n              <Skeleton avatar title={false} loading={isTasksLoading} active>\n                <ListItemMeta\n                  avatar={<Checkbox defaultChecked={item.completed} onChange={handleOnCheckChange(item._id)} />}\n                  title={<ItemTitleText isCompleted={item.completed}>{item.name}</ItemTitleText>}\n                />\n              </Skeleton>\n            </List.Item>\n          )}\n        />\n      </Card>\n      <TaskModal\n        visible={isTaskModalVisible}\n        defaultValue={selectedTask}\n        onClose={handleOnTaskModalClose}\n        onSubmitted={handleOnUpdateTaskSubmitted}\n      />\n    </>\n  );\n};\nexport default TaskList;\n","import { useMemo } from 'react';\nimport { Pie } from '@ant-design/charts';\n\nconst PieChart = ({ tasksCompleted, totalTasks }) => {\n  const data = useMemo(\n    () => [\n      {\n        label: 'Completed Tasks',\n        value: tasksCompleted\n      },\n      {\n        label: 'Incomplete Tasks',\n        value: totalTasks - tasksCompleted\n      }\n    ],\n    [tasksCompleted, totalTasks]\n  );\n\n  const config = useMemo(\n    () => ({\n      height: 120,\n      width: 120,\n      data: data,\n      angleField: 'value',\n      colorField: 'label',\n      color: ({ label }) => {\n        if (label === 'Completed Tasks') {\n          return '#5285ec';\n        }\n        return '#e8ecec';\n      },\n      legend: false,\n      label: {\n        type: 'outer',\n        content: '{name}'\n      },\n      interactions: [{ type: 'element-active' }]\n    }),\n    [data]\n  );\n\n  return <Pie {...config} />;\n};\n\nexport default PieChart;\n","import styled from '@emotion/styled';\n\nexport const DashboardContainer = styled.div`\n  border-radius: 8px;\n  width: 80vw;\n  margin: 0 auto;\n\n  @media (max-width: 768px) {\n    width: 100vw;\n    margin: 0;\n  }\n`;\n\nexport const CompletedTaskText = styled.span`\n  font-size: 64px;\n  color: ${props => props.theme.color.primary};\n`;\n\nexport const TotalTaskText = styled.span`\n  font-size: 24px;\n  color: #758c91;\n`;\n\nexport const List = styled.ul`\n  padding-left: 20px;\n  color: ${props => props.theme.color.textColor};\n`;\n\nexport const ListItem = styled.li`\n  color: ${props => props.theme.color.textColor};\n  font-size: 16px;\n  text-decoration: ${props => props.isCompleted && 'line-through'};\n`;\n","import React, { useState } from 'react';\nimport { Col, Row } from 'antd';\n\nimport { useGetDashboardData } from 'apis/dashboard';\nimport { useRefetchTasks } from 'apis/task';\nimport { withAppContext } from 'contexts/AppContext/AppContext';\n\nimport Card from 'components/Card/Card';\nimport TaskListSection from './components/TaskListSection/TaskListSection';\nimport PieChart from './components/PieChart/PieChart';\n\nimport { DashboardContainer, CompletedTaskText, TotalTaskText, List, ListItem } from './Dashboard.styles';\nimport TaskModal from './components/TaskModal/TaskModal';\n\nconst useTaskModal = () => {\n  const [isTaskModalVisible, setTaskModalVisible] = useState(false);\n\n  const openTaskModal = () => {\n    setTaskModalVisible(true);\n  };\n\n  const closeTaskModal = () => {\n    setTaskModalVisible(false);\n  };\n\n  return { isTaskModalVisible, openTaskModal, closeTaskModal };\n};\n\nconst Dashboard = () => {\n  const { isLoading, data: dashboardData, refetch: refetchDashboardData } = useGetDashboardData();\n  const { isTaskModalVisible, openTaskModal, closeTaskModal } = useTaskModal();\n  const refetchTasks = useRefetchTasks();\n\n  const { tasksCompleted, totalTasks, latestTasks = [] } = dashboardData;\n\n  const handleOnTaskUpdated = () => {\n    refetchDashboardData();\n    refetchTasks();\n  };\n\n  const handleOnTaskModalSubmitted = () => {\n    refetchDashboardData();\n    refetchTasks();\n    closeTaskModal();\n  };\n\n  const handleOnAddNewTaskButtonClick = () => {\n    openTaskModal();\n  };\n\n  const handleOnTaskModalClose = () => {\n    closeTaskModal();\n  };\n\n  return (\n    <DashboardContainer>\n      <Row gutter={[16, 16]} style={{ marginBottom: 24 }}>\n        <Col span={24} md={8}>\n          <Card isLoading={isLoading} title=\"Tasks Completed\">\n            <CompletedTaskText>{tasksCompleted}</CompletedTaskText>\n            <TotalTaskText>/ {totalTasks}</TotalTaskText>\n          </Card>\n        </Col>\n        <Col span={24} md={8}>\n          <Card isLoading={isLoading} title=\"Latest Created Tasks\">\n            <List>\n              {latestTasks.map(task => (\n                <ListItem isCompleted={task.completed}>{task.name}</ListItem>\n              ))}\n            </List>\n          </Card>\n        </Col>\n        <Col span={24} md={8}>\n          <Card isLoading={isLoading} style={{ paddingLeft: 0, paddingRight: 0 }}>\n            <PieChart tasksCompleted={tasksCompleted} totalTasks={totalTasks} />\n          </Card>\n        </Col>\n      </Row>\n\n      <TaskListSection onUpdated={handleOnTaskUpdated} onAddNewTaskButtonClick={handleOnAddNewTaskButtonClick} />\n      <TaskModal visible={isTaskModalVisible} onClose={handleOnTaskModalClose} onSubmitted={handleOnTaskModalSubmitted} />\n    </DashboardContainer>\n  );\n};\n\nexport default withAppContext(Dashboard);\n","import api from './apiHelper';\nimport { useCustomQuery } from 'hooks/reactQuery';\n\nexport const useGetDashboardData = () => {\n  const getDashboardData = async () => {\n    return api.get(`/dashboard`);\n  };\n\n  return useCustomQuery('dashboard', [], getDashboardData, { defaultEmptyValue: {} });\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nimport { AppContextProvider } from 'contexts/AppContext/AppContext';\nimport ProtectedRoute from 'components/ProtectedRoute/ProtectedRoute';\nimport StandardLayout from 'layouts/StandardLayout/StandardLayout';\nimport ExternalLayout from 'layouts/ExternalLayout/ExternalLayout';\n\nimport Login from 'pages/Login/Login';\nimport Dashboard from 'pages/Dashboard/Dashboard';\n\nimport { buildDashboardUri, buildLoginUri } from 'utils/routes';\nimport { init as initErrAndPerf } from 'utils/errorAndPerfLogging';\n\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: false,\n      refetchOnWindowFocus: false,\n      staleTime: 2 * 1000 // 2 seconds\n    }\n  }\n});\ninitErrAndPerf();\n\nconst loginUri = buildLoginUri();\nconst dashboardUri = buildDashboardUri();\n\nconst pathsInStandardLayout = [dashboardUri];\n\nconst pathsInExternalLayout = [loginUri];\n\nconst InternalAppSwitch = () => {\n  return (\n    <StandardLayout>\n      <Switch>\n        <ProtectedRoute exact path={dashboardUri} component={Dashboard} />\n      </Switch>\n    </StandardLayout>\n  );\n};\n\nconst ExternalAppSwitch = () => {\n  return (\n    <ExternalLayout>\n      <Switch>\n        <Route exact path={loginUri} component={Login} />\n      </Switch>\n    </ExternalLayout>\n  );\n};\n\nconst Main = () => {\n  return (\n    <Router>\n      <AppContextProvider>\n        <Switch>\n          <Redirect exact from=\"/\" to={loginUri} />\n          <Route path={pathsInStandardLayout}>\n            <InternalAppSwitch />\n          </Route>\n          <Route path={pathsInExternalLayout}>\n            <ExternalAppSwitch />\n          </Route>\n          <Redirect from=\"*\" to={loginUri} />\n        </Switch>\n      </AppContextProvider>\n    </Router>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback=\"loading\">\n      <HelmetProvider>\n        <QueryClientProvider client={queryClient}>\n          <Main />\n        </QueryClientProvider>\n      </HelmetProvider>\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nreportWebVitals();\n"],"sourceRoot":""}